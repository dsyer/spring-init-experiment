[
	{
	  "name": "app.main.SampleApplication",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "runner",
		  "parameterTypes": []
		},
		{
		  "name": "userEndpoints",
		  "parameterTypes": []
		},
		{
		  "name": "main",
		  "parameterTypes": [
			"java.lang.String[]"
		  ]
		}
	  ]
	},
	{
	  "name": "app.main.foo.FooRepository",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "app.main.foo.JdbcFooRepository",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "allDeclaredClasses": true
	},
	{
	  "name": "app.main.foo.JdbcFooRepository$FooRowMapper",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allDeclaredClasses": true
	},
	{
	  "name": "ch.qos.logback.classic.pattern.DateConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "ch.qos.logback.classic.pattern.LevelConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "ch.qos.logback.classic.pattern.LoggerConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "ch.qos.logback.classic.pattern.MDCConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "ch.qos.logback.classic.pattern.MessageConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "ch.qos.logback.classic.pattern.ThreadConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "com.fasterxml.jackson.core.JsonGenerator",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "com.fasterxml.jackson.databind.ObjectMapper",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "com.zaxxer.hikari.HikariConfig",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "com.zaxxer.hikari.HikariConfigMXBean",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "com.zaxxer.hikari.HikariDataSource",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry[]"
	},
	{
	  "name": "io.netty.bootstrap.ServerBootstrap$1",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
	  "fields": [
		{
		  "name": "refCnt"
		}
	  ]
	},
	{
	  "name": "io.netty.channel.AbstractChannelHandlerContext",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelDuplexHandler",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelFutureListener",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelHandler",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelHandlerAdapter",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelHandlerContext",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelInboundHandler",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelInboundHandlerAdapter",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelInboundInvoker",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelInitializer",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelOutboundInvoker",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.ChannelPipeline",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.CombinedChannelDuplexHandler",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.DefaultChannelPipeline",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.channel.socket.nio.NioSocketChannel",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "io.netty.handler.codec.http.HttpServerCodec",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.util.concurrent.GenericFutureListener",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
	  "fields": [
		{
		  "name": "producerLimit"
		}
	  ]
	},
	{
	  "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
	  "fields": [
		{
		  "name": "consumerIndex"
		}
	  ]
	},
	{
	  "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
	  "fields": [
		{
		  "name": "producerIndex"
		}
	  ]
	},
	{
	  "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
	  "fields": [
		{
		  "name": "consumerIndex"
		}
	  ]
	},
	{
	  "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
	  "fields": [
		{
		  "name": "producerIndex"
		}
	  ]
	},
	{
	  "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
	  "fields": [
		{
		  "name": "producerLimit"
		}
	  ]
	},
	{
	  "name": "java.io.Serializable",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "java.io.Serializable[]"
	},
	{
	  "name": "java.lang.CharSequence[]"
	},
	{
	  "name": "java.lang.Comparable[]"
	},
	{
	  "name": "java.lang.Object",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "java.lang.String[]"
	},
	{
	  "name": "java.lang.annotation.Annotation",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "java.nio.Buffer",
	  "fields": [
		{
		  "name": "address"
		}
	  ]
	},
	{
	  "name": "java.nio.DirectByteBuffer",
	  "fields": [
		{
		  "name": "cleaner"
		}
	  ],
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": [
			"long",
			"int"
		  ]
		}
	  ]
	},
	{
	  "name": "java.sql.DatabaseMetaData",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "java.sql.Statement",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "java.sql.Statement[]"
	},
	{
	  "name": "java.util.ArrayList",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "java.util.EventListener",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "java.util.EventObject",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "java.util.concurrent.Executor"
	},
	{
	  "name": "java.util.concurrent.ScheduledExecutorService"
	},
	{
	  "name": "java.util.logging.LogManager",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "javax.annotation.PostConstruct",
	  "allDeclaredMethods": true
	},
	{
	  "name": "javax.annotation.Resource",
	  "allDeclaredMethods": true
	},
	{
	  "name": "javax.sql.DataSource",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "javax.sql.XADataSource"
	},
	{
	  "name": "javax.transaction.Transactional",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.mvstore.db.MVTableEngine",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.server.web.WebServlet"
	},
	{
	  "name": "org.h2.store.fs.FilePathAsync",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathDisk",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathMem",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathMemLZF",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathNio",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathNioMapped",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathNioMem",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathNioMemLZF",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathRetryOnInterrupt",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathSplit",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.h2.store.fs.FilePathZip",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.MethodMatcher",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.aop.Pointcut",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.framework.ProxyConfig",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.framework.ProxyProcessorSupport",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.aop.support.StaticMethodMatcher",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.aop.support.StaticMethodMatcherPointcut",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.beans.ExtendedBeanInfoFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.beans.factory.Aware",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.beans.factory.BeanClassLoaderAware",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.beans.factory.BeanFactoryAware",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.beans.factory.InitializingBean",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.beans.factory.annotation.Autowired",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.beans.factory.annotation.Qualifier",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.beans.factory.annotation.Value",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.beans.factory.config.PropertiesFactoryBean",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.ClearCachesApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.CommandLineRunner",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.NativePropertiesListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.SpringApplication",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.SpringBootConfiguration",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "applicationAvailability",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "cacheManagerCustomizers",
		  "parameterTypes": [
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		},
		{
		  "name": "cacheAutoConfigurationValidator",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.cache.CacheProperties",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$EhCache",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "cacheManager",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.cache.CacheProperties",
			"org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "ehCacheCacheManager",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.cache.CacheProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "cacheManager",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
			"java.util.Collection"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "infinispanCacheManager",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.cache.CacheProperties",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "setBeanClassLoader",
		  "parameterTypes": [
			"java.lang.ClassLoader"
		  ]
		},
		{
		  "name": "jCacheCacheManager",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.cache.CacheProperties",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheProviderAvailableCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "cacheManager",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "cacheManager",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.cache.CacheProperties",
			"org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.AbstractNestedCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.AnyNestedCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.NoneNestedConditions",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.ResourceCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy",
	  "allDeclaredFields": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.condition.SpringBootCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "defaultLifecycleProcessor",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.context.LifecycleProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "messageSourceProperties",
		  "parameterTypes": []
		},
		{
		  "name": "messageSource",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.context.MessageSourceProperties"
		  ]
		},
		{
		  "name": "access$000",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.context.MessageSourceProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "propertySourcesPlaceholderConfigurer",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "persistenceExceptionTranslationPostProcessor",
		  "parameterTypes": [
			"org.springframework.core.env.Environment"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "h2Console",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.h2.H2ConsoleProperties",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties$Settings",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "messageConverters",
		  "parameterTypes": [
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "stringHttpMessageConverter",
		  "parameterTypes": [
			"org.springframework.core.env.Environment"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "mappingJackson2HttpMessageConverter",
		  "parameterTypes": [
			"com.fasterxml.jackson.databind.ObjectMapper"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "access$000",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "defaultCodecCustomizer",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.codec.CodecProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "jacksonCodecCustomizer",
		  "parameterTypes": [
			"com.fasterxml.jackson.databind.ObjectMapper"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "gitProperties",
		  "parameterTypes": []
		},
		{
		  "name": "buildProperties",
		  "parameterTypes": []
		},
		{
		  "name": "loadFrom",
		  "parameterTypes": [
			"org.springframework.core.io.Resource",
			"java.lang.String",
			"java.nio.charset.Charset"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "jsonComponentModule",
		  "parameterTypes": []
		},
		{
		  "name": "access$000",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "standardJacksonObjectMapperBuilderCustomizer",
		  "parameterTypes": [
			"org.springframework.context.ApplicationContext",
			"org.springframework.boot.autoconfigure.jackson.JacksonProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "jacksonObjectMapperBuilder",
		  "parameterTypes": [
			"org.springframework.context.ApplicationContext",
			"java.util.List"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "jacksonObjectMapper",
		  "parameterTypes": [
			"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "parameterNamesModule",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition$ExplicitType",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition$PooledDataSourceAvailable",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "dataSource",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "dataSource",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$Registrar",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "access$000",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "validateMBeans",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceSchemaCreatedEvent",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "transactionManager",
		  "parameterTypes": [
			"javax.sql.DataSource",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.EmbeddedDataSourceConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "setBeanClassLoader",
		  "parameterTypes": [
			"java.lang.ClassLoader"
		  ]
		},
		{
		  "name": "dataSource",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "jdbcTemplate",
		  "parameterTypes": [
			"javax.sql.DataSource",
			"org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "dataSource",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
			"org.springframework.context.ApplicationContext"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "namedParameterJdbcTemplate",
		  "parameterTypes": [
			"org.springframework.jdbc.core.JdbcTemplate"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "hikariPoolDataSourceMetadataProvider",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "taskExecutorBuilder",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		},
		{
		  "name": "applicationTaskExecutor",
		  "parameterTypes": [
			"org.springframework.boot.task.TaskExecutorBuilder"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "taskScheduler",
		  "parameterTypes": [
			"org.springframework.boot.task.TaskSchedulerBuilder"
		  ]
		},
		{
		  "name": "taskSchedulerBuilder",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "platformTransactionManagerCustomizers",
		  "parameterTypes": [
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		},
		{
		  "name": "transactionalOperator",
		  "parameterTypes": [
			"org.springframework.transaction.ReactiveTransactionManager"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "transactionTemplate",
		  "parameterTypes": [
			"org.springframework.transaction.PlatformTransactionManager"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ResourceProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Content",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Strategy",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "restTemplateBuilder",
		  "parameterTypes": [
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "nettyWebServerFactoryCustomizer",
		  "parameterTypes": [
			"org.springframework.core.env.Environment",
			"org.springframework.boot.autoconfigure.web.ServerProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "httpHandler",
		  "parameterTypes": [
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "reactiveWebServerFactoryCustomizer",
		  "parameterTypes": [
			"org.springframework.boot.autoconfigure.web.ServerProperties"
		  ]
		},
		{
		  "name": "forwardedHeaderTransformer",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "reactorServerResourceFactory",
		  "parameterTypes": []
		},
		{
		  "name": "nettyReactiveWebServerFactory",
		  "parameterTypes": [
			"org.springframework.http.client.reactive.ReactorResourceFactory",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.ResourceChainResourceHandlerRegistrationCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "hiddenHttpMethodFilter",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "webFluxConversionService",
		  "parameterTypes": []
		},
		{
		  "name": "webFluxValidator",
		  "parameterTypes": []
		},
		{
		  "name": "createRequestMappingHandlerAdapter",
		  "parameterTypes": []
		},
		{
		  "name": "createRequestMappingHandlerMapping",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$ResourceChainCustomizerConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "resourceHandlerRegistrationCustomizer",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "configureArgumentResolvers",
		  "parameterTypes": [
			"org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
		  ]
		},
		{
		  "name": "configureHttpMessageCodecs",
		  "parameterTypes": [
			"org.springframework.http.codec.ServerCodecConfigurer"
		  ]
		},
		{
		  "name": "addResourceHandlers",
		  "parameterTypes": [
			"org.springframework.web.reactive.config.ResourceHandlerRegistry"
		  ]
		},
		{
		  "name": "configureViewResolvers",
		  "parameterTypes": [
			"org.springframework.web.reactive.config.ViewResolverRegistry"
		  ]
		},
		{
		  "name": "addFormatters",
		  "parameterTypes": [
			"org.springframework.format.FormatterRegistry"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "welcomePageRouterFunctionMapping",
		  "parameterTypes": [
			"org.springframework.context.ApplicationContext",
			"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
			"org.springframework.boot.autoconfigure.web.ResourceProperties"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "errorWebExceptionHandler",
		  "parameterTypes": [
			"org.springframework.boot.web.reactive.error.ErrorAttributes",
			"org.springframework.boot.autoconfigure.web.ResourceProperties",
			"org.springframework.beans.factory.ObjectProvider",
			"org.springframework.http.codec.ServerCodecConfigurer",
			"org.springframework.context.ApplicationContext"
		  ]
		},
		{
		  "name": "errorAttributes",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "clientConnectorCustomizer",
		  "parameterTypes": [
			"org.springframework.http.client.reactive.ClientHttpConnector"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JettyClient",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "methods": [
		{
		  "name": "reactorClientResourceFactory",
		  "parameterTypes": []
		},
		{
		  "name": "reactorClientHttpConnector",
		  "parameterTypes": [
			"org.springframework.http.client.reactive.ReactorResourceFactory",
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "webClientBuilder",
		  "parameterTypes": [
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "exchangeStrategiesCustomizer",
		  "parameterTypes": [
			"org.springframework.beans.factory.ObjectProvider"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "methods": [
		{
		  "name": "characterEncodingFilter",
		  "parameterTypes": []
		},
		{
		  "name": "localeCharsetMappingsCustomizer",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.FileEncodingApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.TypeExcludeFilter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.annotation.DeterminableImports",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.context.config.ConfigDataProperties",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.config.ResourceConfigDataLoader",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.config.ResourceConfigDataLocationResolver",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.context.event.EventPublishingRunListener",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.context.logging.ClasspathLoggingApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConfigurationProperties",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConfigurationPropertiesScan",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.context.properties.ConstructorBinding",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.context.properties.bind.Name",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.ConnectorStartFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.info.BuildProperties",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.info.GitProperties",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.jackson.JsonComponentModule",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.jarmode.layertools.LayerToolsJarMode",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.logging.java.JavaLoggingSystem",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.boot.logging.logback.ColorConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.task.TaskExecutorBuilder",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.task.TaskSchedulerBuilder",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.test.context.ImportsContextCustomizerFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizerFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.mock.mockito.MockitoContextCustomizerFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizerFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizerFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.web.client.RestTemplateBuilder",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.codec.CodecCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.reactive.error.ErrorAttributes"
	},
	{
	  "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.reactive.filter.OrderedHiddenHttpMethodFilter",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
	},
	{
	  "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.boot.web.servlet.server.Encoding",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.cache.Cache"
	},
	{
	  "name": "org.springframework.cache.CacheManager"
	},
	{
	  "name": "org.springframework.cache.concurrent.ConcurrentMapCacheManager",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.cache.interceptor.CacheAspectSupport"
	},
	{
	  "name": "org.springframework.cache.support.NoOpCacheManager",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.cache.support.SimpleCacheManager",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.ApplicationContextAware",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.ApplicationEvent",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.ApplicationListener",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.EmbeddedValueResolverAware",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.EnvironmentAware",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.MessageSource",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.ResourceLoaderAware",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.AdviceModeImportSelector",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.AnnotationConfigApplicationContext",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.annotation.AutoProxyRegistrar",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Bean",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.annotation.ComponentScan",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.ComponentScan$Filter",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Condition",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Conditional",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Configuration",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.ConfigurationCondition",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.annotation.DeferredImportSelector",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.FilterType",
	  "allDeclaredFields": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Import",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.ImportAware",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.ImportBeanDefinitionRegistrar",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.ImportSelector",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Lazy",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Primary",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Role",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.annotation.Scope",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.context.event.DefaultEventListenerFactory",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.event.EventListenerMethodProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.support.DefaultLifecycleProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.core.DecoratingProxy"
	},
	{
	  "name": "org.springframework.core.Ordered",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.core.PriorityOrdered"
	},
	{
	  "name": "org.springframework.core.annotation.AliasFor",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.core.annotation.AnnotationAttributes"
	},
	{
	  "name": "org.springframework.core.annotation.AnnotationAttributes[]"
	},
	{
	  "name": "org.springframework.core.annotation.Order",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.core.annotation.TypeMappedAnnotation[]"
	},
	{
	  "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.format.support.FormattingConversionService",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.http.ReactiveHttpInputMessage"
	},
	{
	  "name": "org.springframework.http.client.reactive.ClientHttpConnector"
	},
	{
	  "name": "org.springframework.http.client.reactive.ReactorClientHttpConnector",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.http.client.reactive.ReactorResourceFactory",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.http.codec.CodecConfigurer"
	},
	{
	  "name": "org.springframework.http.converter.FormHttpMessageConverter",
	  "allDeclaredFields": true
	},
	{
	  "name": "org.springframework.http.converter.HttpMessageConverter"
	},
	{
	  "name": "org.springframework.http.converter.StringHttpMessageConverter",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.http.server.reactive.HttpHandler",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.init.func.FunctionalInstallerListener",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.init.func.InfrastructureInitializer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.init.test.FunctionalContextCustomizerFactory",
	  "methods": [
		{
		  "name": "<init>",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.jdbc.core.JdbcOperations"
	},
	{
	  "name": "org.springframework.jdbc.core.JdbcTemplate",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
	},
	{
	  "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
	},
	{
	  "name": "org.springframework.jdbc.support.JdbcAccessor",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.scheduling.TaskScheduler"
	},
	{
	  "name": "org.springframework.scheduling.annotation.SchedulingConfigurer"
	},
	{
	  "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.stereotype.Component",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.stereotype.Repository",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.transaction.PlatformTransactionManager"
	},
	{
	  "name": "org.springframework.transaction.ReactiveTransactionManager"
	},
	{
	  "name": "org.springframework.transaction.TransactionDefinition",
	  "allDeclaredFields": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.transaction.TransactionManager",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "setImportMetadata",
		  "parameterTypes": [
			"org.springframework.core.type.AnnotationMetadata"
		  ]
		},
		{
		  "name": "setConfigurers",
		  "parameterTypes": [
			"java.util.Collection"
		  ]
		},
		{
		  "name": "transactionalEventListenerFactory",
		  "parameterTypes": []
		}
	  ]
	},
	{
	  "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
	  "allDeclaredFields": true,
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.transaction.annotation.Propagation",
	  "allDeclaredFields": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "transactionAdvisor",
		  "parameterTypes": [
			"org.springframework.transaction.interceptor.TransactionAttributeSource",
			"org.springframework.transaction.interceptor.TransactionInterceptor"
		  ]
		},
		{
		  "name": "transactionAttributeSource",
		  "parameterTypes": []
		},
		{
		  "name": "transactionInterceptor",
		  "parameterTypes": [
			"org.springframework.transaction.interceptor.TransactionAttributeSource"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.transaction.annotation.Transactional",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor$1",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.transaction.reactive.TransactionalOperator",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.transaction.support.TransactionOperations"
	},
	{
	  "name": "org.springframework.transaction.support.TransactionTemplate",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.validation.Validator",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.DeleteMapping",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.ExceptionHandler",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.GetMapping",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.InitBinder",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.Mapping",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.ModelAttribute",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.PatchMapping",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.PathVariable",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.PostMapping",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.PutMapping",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.RequestBody",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.RequestMapping",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.RequestMethod",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.RequestMethod[]",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.RequestParam",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.ResponseBody",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.bind.annotation.RestController",
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.client.RestTemplate"
	},
	{
	  "name": "org.springframework.web.context.support.GenericWebApplicationContext",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.web.filter.CharacterEncodingFilter",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.web.filter.reactive.HiddenHttpMethodFilter"
	},
	{
	  "name": "org.springframework.web.reactive.DispatcherHandler"
	},
	{
	  "name": "org.springframework.web.reactive.HandlerResult",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true,
	  "methods": [
		{
		  "name": "setConfigurers",
		  "parameterTypes": [
			"java.util.List"
		  ]
		},
		{
		  "name": "configureContentTypeResolver",
		  "parameterTypes": [
			"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
		  ]
		},
		{
		  "name": "addCorsMappings",
		  "parameterTypes": [
			"org.springframework.web.reactive.config.CorsRegistry"
		  ]
		},
		{
		  "name": "configurePathMatching",
		  "parameterTypes": [
			"org.springframework.web.reactive.config.PathMatchConfigurer"
		  ]
		},
		{
		  "name": "addResourceHandlers",
		  "parameterTypes": [
			"org.springframework.web.reactive.config.ResourceHandlerRegistry"
		  ]
		},
		{
		  "name": "configureArgumentResolvers",
		  "parameterTypes": [
			"org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
		  ]
		},
		{
		  "name": "configureHttpMessageCodecs",
		  "parameterTypes": [
			"org.springframework.http.codec.ServerCodecConfigurer"
		  ]
		},
		{
		  "name": "addFormatters",
		  "parameterTypes": [
			"org.springframework.format.FormatterRegistry"
		  ]
		},
		{
		  "name": "getValidator",
		  "parameterTypes": []
		},
		{
		  "name": "getMessageCodesResolver",
		  "parameterTypes": []
		},
		{
		  "name": "getWebSocketService",
		  "parameterTypes": []
		},
		{
		  "name": "configureViewResolvers",
		  "parameterTypes": [
			"org.springframework.web.reactive.config.ViewResolverRegistry"
		  ]
		}
	  ]
	},
	{
	  "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.web.reactive.config.WebFluxConfigurer",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "org.springframework.web.reactive.function.client.WebClient"
	},
	{
	  "name": "org.springframework.web.reactive.function.client.WebClient$Builder",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.web.reactive.function.server.RouterFunction",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "org.springframework.web.server.adapter.ForwardedHeaderTransformer",
	  "allDeclaredConstructors": true
	},
	{
	  "name": "reactor.netty.DisposableServer",
	  "allDeclaredConstructors": true,
	  "allDeclaredMethods": true
	},
	{
	  "name": "reactor.netty.channel.ChannelOperationsHandler",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	},
	{
	  "name": "reactor.netty.http.client.HttpClient"
	},
	{
	  "name": "reactor.netty.http.server.HttpServer"
	},
	{
	  "name": "reactor.netty.http.server.HttpTrafficHandler",
	  "allDeclaredConstructors": true,
	  "allPublicMethods": true
	}
  ]